// <auto-generated />
using System;
using LashStudio.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LashStudio.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250922212039_CHangeServiceRelativeToMedia")]
    partial class CHangeServiceRelativeToMedia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LashStudio.Domain.AboutPerson.AboutPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoKeywordsCsv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutPages");
                });

            modelBuilder.Entity("LashStudio.Domain.AboutPerson.AboutPageLocale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AboutPageId")
                        .HasColumnType("bigint");

                    b.Property<string>("BodyHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AboutPageId");

                    b.ToTable("AboutPageLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Blog.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CoverMediaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SlugDefault")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverMediaId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("LashStudio.Domain.Blog.PostLocale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("Culture", "Slug")
                        .IsUnique();

                    b.ToTable("PostLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactBusinessHour", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<TimeOnly?>("Close")
                        .HasColumnType("time");

                    b.Property<long>("ContactProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("Open")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ContactProfileId");

                    b.ToTable("ContactBusinessHours");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactCta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ContactProfileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("UrlOverride")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactProfileId");

                    b.ToTable("ContactCtas");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactCtaLocale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ContactCtaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactCtaId");

                    b.ToTable("ContactCtaLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConsentAccepted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EmailPrimary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MapLat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MapLng")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MapZoom")
                        .HasColumnType("int");

                    b.Property<string>("Phones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreferredCta")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactProfiles");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactProfileLocale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ContactProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToFindUs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactProfileId");

                    b.ToTable("ContactProfileLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CoverMediaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DurationHours")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PublishedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverMediaId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.CourseLocale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.CourseMedia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<long>("MediaAssetId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PosterAssetId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("MediaAssetId");

                    b.HasIndex("PosterAssetId");

                    b.ToTable("CourseMedia");
                });

            modelBuilder.Entity("LashStudio.Domain.Faq.FaqItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FaqItems", (string)null);
                });

            modelBuilder.Entity("LashStudio.Domain.Faq.FaqItemLocale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("FaqItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FaqItemId", "Culture")
                        .IsUnique();

                    b.ToTable("FaqItemLocales", (string)null);
                });

            modelBuilder.Entity("LashStudio.Domain.Media.MediaAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DurationSec")
                        .HasColumnType("float");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashSha256")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SizeBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("StoredPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MediaAssets");
                });

            modelBuilder.Entity("LashStudio.Domain.Media.MediaAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<long>("MediaAssetId")
                        .HasColumnType("bigint");

                    b.Property<string>("OwnerKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("OwnerType")
                        .HasColumnType("smallint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaAssetId");

                    b.ToTable("MediaAttachments");
                });

            modelBuilder.Entity("LashStudio.Domain.Services.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Category")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("CoverMediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PublishedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Variant")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("LashStudio.Domain.Services.ServiceLocale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceLocales");
                });

            modelBuilder.Entity("LashStudio.Domain.Settings.SiteSettingValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Culture")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SiteSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SiteSettingId", "Culture")
                        .IsUnique()
                        .HasFilter("[Culture] IS NOT NULL");

                    b.ToTable("SiteSettingValues", (string)null);
                });

            modelBuilder.Entity("LashStudio.Infrastructure.Localization.LocalizationResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("LocalizationResources", (string)null);
                });

            modelBuilder.Entity("LashStudio.Infrastructure.Localization.LocalizationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId", "Culture")
                        .IsUnique();

                    b.ToTable("LocalizationValues", (string)null);
                });

            modelBuilder.Entity("LashStudio.Infrastructure.Logs.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Path")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SiteSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SiteSettings", (string)null);
                });

            modelBuilder.Entity("LashStudio.Domain.AboutPerson.AboutPageLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.AboutPerson.AboutPage", "AboutPage")
                        .WithMany("Locales")
                        .HasForeignKey("AboutPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutPage");
                });

            modelBuilder.Entity("LashStudio.Domain.Blog.Post", b =>
                {
                    b.HasOne("LashStudio.Domain.Media.MediaAsset", "CoverMedia")
                        .WithMany()
                        .HasForeignKey("CoverMediaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CoverMedia");
                });

            modelBuilder.Entity("LashStudio.Domain.Blog.PostLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Blog.Post", "Post")
                        .WithMany("Locales")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactBusinessHour", b =>
                {
                    b.HasOne("LashStudio.Domain.Contacts.ContactProfile", "ContactProfile")
                        .WithMany("Hours")
                        .HasForeignKey("ContactProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactProfile");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactCta", b =>
                {
                    b.HasOne("LashStudio.Domain.Contacts.ContactProfile", "ContactProfile")
                        .WithMany("Ctas")
                        .HasForeignKey("ContactProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactProfile");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactCtaLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Contacts.ContactCta", "ContactCta")
                        .WithMany("Locales")
                        .HasForeignKey("ContactCtaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactCta");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactProfileLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Contacts.ContactProfile", "ContactProfile")
                        .WithMany("Locales")
                        .HasForeignKey("ContactProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactProfile");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.Course", b =>
                {
                    b.HasOne("LashStudio.Domain.Media.MediaAsset", "CoverMedia")
                        .WithMany()
                        .HasForeignKey("CoverMediaId");

                    b.Navigation("CoverMedia");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.CourseLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Courses.Course", "Course")
                        .WithMany("Locales")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.CourseMedia", b =>
                {
                    b.HasOne("LashStudio.Domain.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LashStudio.Domain.Media.MediaAsset", "MediaAsset")
                        .WithMany()
                        .HasForeignKey("MediaAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LashStudio.Domain.Media.MediaAsset", "PosterAsset")
                        .WithMany()
                        .HasForeignKey("PosterAssetId");

                    b.Navigation("Course");

                    b.Navigation("MediaAsset");

                    b.Navigation("PosterAsset");
                });

            modelBuilder.Entity("LashStudio.Domain.Faq.FaqItemLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Faq.FaqItem", "FaqItem")
                        .WithMany("Locales")
                        .HasForeignKey("FaqItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaqItem");
                });

            modelBuilder.Entity("LashStudio.Domain.Media.MediaAttachment", b =>
                {
                    b.HasOne("LashStudio.Domain.Media.MediaAsset", "MediaAsset")
                        .WithMany("Attachments")
                        .HasForeignKey("MediaAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaAsset");
                });

            modelBuilder.Entity("LashStudio.Domain.Services.ServiceLocale", b =>
                {
                    b.HasOne("LashStudio.Domain.Services.Service", "Service")
                        .WithMany("Locales")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("LashStudio.Domain.Settings.SiteSettingValue", b =>
                {
                    b.HasOne("SiteSetting", "Setting")
                        .WithMany("Values")
                        .HasForeignKey("SiteSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("LashStudio.Infrastructure.Localization.LocalizationValue", b =>
                {
                    b.HasOne("LashStudio.Infrastructure.Localization.LocalizationResource", "Resource")
                        .WithMany("Values")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("LashStudio.Domain.AboutPerson.AboutPage", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Blog.Post", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactCta", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Contacts.ContactProfile", b =>
                {
                    b.Navigation("Ctas");

                    b.Navigation("Hours");

                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Courses.Course", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Faq.FaqItem", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Domain.Media.MediaAsset", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("LashStudio.Domain.Services.Service", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("LashStudio.Infrastructure.Localization.LocalizationResource", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SiteSetting", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
